What is Oracle Visual Builder?
Oracle Visual Builder is an intuitive development experience on top of a development and hosting platform that empowers you to create engaging responsive applications. Focusing on ease of use and a visual development approach, it provides an easy way for you to create applications that are hosted in Oracle’s secure and scalable cloud platform.
Visual Development Experience
Visual Builder provides simple but powerful visual development tools to create responsive apps—all without the need to install any additional software. This rich set of visual tools help you quickly design your app by dragging and dropping UI components and customizing their attributes to define behavior. While these tools lend themselves to low-code developers, experienced developers can just as easily access the underlying source code, even extend it using standard HTML5, JavaScript, and CSS techniques for complex needs.
Easy Access to Data
Visual Builder makes it easy to access your app’s data through REST-based services. So you can create reusable business objects to implement your app’s business logic and store its data, which can then be managed through REST endpoints that Visual Builder generates for you. Or you can pick data objects exposed by Oracle SaaS or Oracle Integration applications in an integrated catalog of REST services. You can also access data from any external REST service with just a few clicks.
Development and Hosting Platform
Visual Builder is a complete development tool as well as a hosting platform, which means you can manage your application’s lifecycle right from development to test and final publishing. Version management and data migration are built into an app’s lifecycle, making it easy for you to stage and publish your app and manage its data in every phase.
What’s more, Visual Builder is a managed service. This means that once you provision a Visual Builder instance, there’s very little you need to do beyond developing and publishing your app. Everything the app needs to run successfully (including a web server to host your application and to secure data access) is taken care of. Thus, as a development team, you can take your app from development to stage and publish it in a very short time. Here’s a high-level walkthrough of how you’d go about developing an app using Visual Builder:
Your Visual Builder instance (represented by the square in the middle of the image) provides capabilities for your visual application both as a visual development tool (at the top) as well as an app hosting platform with a built-in web server (indicated by server-side components at the bottom):
-
As a visual development tool, Visual Builder provides access to UI components and WYSIWYG interfaces that leverage the open-source Oracle JavaScript Extension Toolkit (JET). This visual environment, known as the Designer, features several visual editors that a development team can use to collaboratively build rich UIs that span multiple devices. It also supports Redwood, the Oracle standard for user experience, that lets you develop apps that provide the same look and feel as apps delivered from Oracle.
Within this environment, you can develop browser-based responsive apps, including progressive web apps, which combine the on-device mobile experience with a web app’s ease of distribution—eliminating the need to download updates from app stores.
-
As an app hosting platform, Visual Builder provides various capabilities to publish and run your app in the cloud, including an embedded database that stores your app’s business objects—essentially Oracle tables with business logic exposed through REST APIs—and their data.
It also includes a REST proxy service to manage access to external REST endpoints. When your app’s data comes from REST APIs in Oracle catalogs such as Oracle SaaS or Oracle Integration, the proxy service uses server-side integration with the Oracle Identity Cloud Service (IDCS) to manage authentication and authorization (by default) through identity propagation. When your app’s data comes from other REST endpoints, authenticated REST mechanisms are used to manage credentials.
Together, these components provide the resources required to host your visual app and manage its data.
When your apps are published, they become available to your users in the cloud, from any desktop or mobile device, with communication to the app’s underlying JET components secured over HTTPS and REST.